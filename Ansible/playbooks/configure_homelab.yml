- name: Deploy Homelab containers
  hosts: "rpi_build"
  tasks:
    # Create any required pi level files
    - name: create Prometheus directory
      file:
        path: /home/pi/Config/Prometheus
        state: directory
        owner: pi
        group: pi
        mode: '0774'

    - name: copy Prometheus config file
      copy:
        src: "{{ template }}/prometheus.yml"
        dest: /home/pi/Config/Prometheus
        owner: pi
        group: pi
        mode: '0755'

    # Deploy required data volumes
    - name: create Prometheus storage volume
      community.docker.docker_volume:
        name: prometheus-storage
        recreate: never
        state: present

    - name: create Grafana storage volume
      community.docker.docker_volume:
        name: grafana-storage
        recreate: never
        state: present

    - name: create Transmission config Volume
      community.docker.docker_volume:
        name: transmission-config
        recreate: never
        state: present

    - name: create Transmission storage Volume
      community.docker.docker_volume:
        name: transmission-storage
        recreate: never
        state: present

    - name: create heimdall config Volume
      community.docker.docker_volume:
        name: heimdall-config
        recreate: never
        state: present

    - name: create heimdall storage Volume
      community.docker.docker_volume:
        name: heimdall-storage
        recreate: never
        state: present

    - name: create homebridge storage Volume
      community.docker.docker_volume:
        name: homebridge-storage
        recreate: never
        state: present

    - name: create uptime-kuma data Volume
      community.docker.docker_volume:
        name: uptime-kuma-data
        recreate: never
        state: present

    # Deploy The Containers!    
    - name: deploy node_exporter
      community.docker.docker_container:
        name: node_exporter
        image: "quay.io/prometheus/node-exporter:latest"
        ports:
          - "9100:9100"
        volumes:
          - "/:/host:ro"
        restart_policy: "unless-stopped"

    - name: deploy prometheus
      community.docker.docker_container:
        name: prometheus
        image: "prom/prometheus:latest"
        ports:
          - "9200:9090"
        volumes:
          - "/home/pi/Config/Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
          - "prometheus-storage:/prometheus"
        restart_policy: "unless-stopped"

    - name: deploy grafana
      community.docker.docker_container:
        name: grafana
        image: "grafana/grafana:main"
        ports:
          - "3456:3000"
        volumes:
          - "grafana-storage:/var/lib/grafana"
        restart_policy: "unless-stopped"

    - name: deploy uptime-kuma
      community.docker.docker_container:
        name: uptime-kuma
        image: "louislam/uptime-kuma:1"
        ports:
          - "3001:3001/tcp"
        volumes:
          - "uptime-kuma-data:/app/data"
        restart_policy: "always"

    - name: deploy transmission
      community.docker.docker_container:
        name: transmission
        image: "ghcr.io/linuxserver/transmission:latest"
        ports:
          - "51413:51413/tcp"
          - "51413:51413/udp"
          - "6881:6881/tcp"
          - "6881:6881/udp"
          - "9091:9091/tcp"
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - "transmission-config:/config"
          - "transmission-storage:/storage"
          - "/mnt/nas/Public/Downloads/watch:/watch"
          - "/mnt/nas/Public/Downloads:/downloads"
        restart_policy: "unless-stopped"

    - name: deploy heimdall
      community.docker.docker_container:
        name: heimdall
        image: "ghcr.io/linuxserver/heimdall:latest"
        ports:
          - "447:443/tcp"
          - "8002:80/tcp"
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - "heimdall-config:/config"
          - "heimdall-storage:/storage"
        restart_policy: "unless-stopped"

    - name: deploy homebridge
      community.docker.docker_container:
        name: homebridge
        image: "oznu/homebridge:latest"
        ports:
          - "8581/tcp"
        volumes:
          - "homebridge-config:/homebridge"
        restart_policy: "always"

