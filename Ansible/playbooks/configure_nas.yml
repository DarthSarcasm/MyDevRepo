- name: Configure the NAS connectivity for Atlas
  hosts: "rpi_build"
  become: yes
  tasks:
    # Make sure build_rpi.yml (Or manual setup) has been done first!
    # Now we do the AtlasPi Specific changes

    # Create the mount points for the NAS storage
    - name: create nas mount - Media directory
      file:
        path: /mnt/nas/Media
        state: directory
        mode: '0775'

    - name: create nas mount - Public directory
      file:
        path: /mnt/nas/Public
        state: directory
        mode: '0775'

    # Copy the CRED file for login auth
    - name: copy CREDS files
      copy:
        src: "{{ item }}"
        dest: /home/pi
        owner: pi
        group: pi
        mode: '644'
      with_fileglob: "{{ scripts }}/file_templates/.*CREDS"

    # Time to mount the NAS drives
    - name: Configure Transmission Public Mount
        ansible.posix.mount:
          path: /mnt/nas/Public
          src: //192.168.4.200/Public
          fstype: cifs
          opts: "credentials=/home/pi/.NASCREDS,uid=1000,gid=100,file_mode=0777,dir_mode=0777,vers=2.0"
          state: present

    - name: Configure Plex Media Mount
        ansible.posix.mount:
          path: /mnt/nas/Media
          src: //192.168.4.200/MediaContent
          fstype: cifs
          opts: "credentials=/home/pi/.PLEXCREDS,uid=1000,gid=100,file_mode=0775,dir_mode=0775,vers=2.0"
          state: present

    # Copy atlas script files
    - name: copy AtlasPi admin files
      copy:
        src: "{{ item }}"
        dest: /home/pi/bin
        owner: pi
        group: pi
        mode: '755'
      with_fileglob: "{{ scripts }}/*.sh"

    # Configure the admin scripts in cron
    - name: Configure transmission data cleanup
      ansible.builtin.cron:
        name: "configure bt_cleanup.sh"
        user: pi
        minute: "0"
        hour: "8"
        job: "/home/pi/bin/bt_cleanup.sh>/home/pi/log/btclean.log 2>&1"

    - name: Configure CalibreWeb container bounce
      ansible.builtin.cron:
        name: "configure container_restart.sh"
        user: pi
        minute: "0"
        hour: "3"
        job: "/home/pi/bin/container_restart.sh>/home/pi/log/container-bounce.log 2>&1"

    - name: Configure File movement script
      ansible.builtin.cron:
        name: "configure media_copy.sh"
        user: pi
        minute: "*/20"
        job: "/home/pi/bin/media_copy.sh>/home/pi/log/media-move.log 2>&1"
