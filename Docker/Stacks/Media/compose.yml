services:
  audiobookshelf:
    command:
      - node
      - index.js
    container_name: audiobookshelf
    entrypoint:
      - tini
      - --
    environment:
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - NODE_VERSION=20.12.2
      - YARN_VERSION=1.22.19
      - NODE_ENV=production
    hostname: 7faf03145f83
    image: ghcr.io/advplyr/audiobookshelf:latest
    ipc: private
    logging:
      driver: json-file
      options: {}
    mac_address: 02:42:ac:11:00:0c
    network_mode: bridge
    ports:
      - 13378:80/tcp
    restart: unless-stopped
    volumes:
      - /mnt/nas/Media/Audiobooks:/audiobooks
      - /mnt/nas/Media/Podcasts:/podcasts
      - audiobookshelf-config:/config
      - audiobookshelf-metadata:/metadata
  calibre-web:
    cap_drop:
      - AUDIT_CONTROL
      - BLOCK_SUSPEND
      - DAC_READ_SEARCH
      - IPC_LOCK
      - IPC_OWNER
      - LEASE
      - LINUX_IMMUTABLE
      - MAC_ADMIN
      - MAC_OVERRIDE
      - NET_ADMIN
      - NET_BROADCAST
      - SYSLOG
      - SYS_ADMIN
      - SYS_BOOT
      - SYS_MODULE
      - SYS_NICE
      - SYS_PACCT
      - SYS_PTRACE
      - SYS_RAWIO
      - SYS_RESOURCE
      - SYS_TIME
      - SYS_TTY_CONFIG
      - WAKE_ALARM
    container_name: calibre-web
    entrypoint:
      - /init
    environment:
      - PUID=1000
      - PGID=1000
      - PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - HOME=/root
      - LANGUAGE=en_US.UTF-8
      - LANG=en_US.UTF-8
      - TERM=xterm
      - S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0
      - S6_VERBOSITY=1
      - S6_STAGE2_HOOK=/docker-mods
      - VIRTUAL_ENV=/lsiopy
      - LSIO_FIRST_PARTY=true
    hostname: 24ea6f027f9c
    image: linuxserver/calibre-web:latest
    ipc: private
    labels:
      build_version: Linuxserver.io version:- 0.6.21-ls265 Build-date:-
        2024-04-28T01:38:28+00:00
      maintainer: chbmb
      org.opencontainers.image.authors: linuxserver.io
      org.opencontainers.image.created: 2024-04-28T01:38:28+00:00
      org.opencontainers.image.description: "[Calibre-web](https://github.com/janeczk\
        u/calibre-web) is a web app providing a clean interface for browsing,
        reading and downloading eBooks using an existing Calibre database.   It
        is also possible to integrate google drive and edit metadata and your
        calibre library through the app itself.    This software is a fork of
        library and licensed under the GPL v3 License.  "
      org.opencontainers.image.documentation: https://docs.linuxserver.io/images/docker-calibre-web
      org.opencontainers.image.licenses: GPL-3.0-only
      org.opencontainers.image.ref.name: 83b20b8756599fb168e66377438192b0a19b0ec8
      org.opencontainers.image.revision: 83b20b8756599fb168e66377438192b0a19b0ec8
      org.opencontainers.image.source: https://github.com/linuxserver/docker-calibre-web
      org.opencontainers.image.title: Calibre-web
      org.opencontainers.image.url: https://github.com/linuxserver/docker-calibre-web/packages
      org.opencontainers.image.vendor: linuxserver.io
      org.opencontainers.image.version: 0.6.21-ls265
    logging:
      driver: json-file
      options: {}
    mac_address: 02:42:ac:11:00:08
    network_mode: bridge
    ports:
      - 8083:8083/tcp
    restart: unless-stopped
    volumes:
      - /mnt/nas/Media/Calibre Library:/books
      - calibreweb-config:/config
    working_dir: /
  plex:
    cap_drop:
      - AUDIT_CONTROL
      - BLOCK_SUSPEND
      - DAC_READ_SEARCH
      - IPC_LOCK
      - IPC_OWNER
      - LEASE
      - LINUX_IMMUTABLE
      - MAC_ADMIN
      - MAC_OVERRIDE
      - NET_ADMIN
      - NET_BROADCAST
      - SYSLOG
      - SYS_ADMIN
      - SYS_BOOT
      - SYS_MODULE
      - SYS_NICE
      - SYS_PACCT
      - SYS_PTRACE
      - SYS_RAWIO
      - SYS_RESOURCE
      - SYS_TIME
      - SYS_TTY_CONFIG
      - WAKE_ALARM
    container_name: plex
    entrypoint:
      - /init
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=latest
      - PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - HOME=/root
      - LANGUAGE=en_US.UTF-8
      - LANG=en_US.UTF-8
      - TERM=xterm
      - S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0
      - S6_VERBOSITY=1
      - S6_STAGE2_HOOK=/docker-mods
      - VIRTUAL_ENV=/lsiopy
      - LSIO_FIRST_PARTY=true
      - DEBIAN_FRONTEND=noninteractive
      - PLEX_DOWNLOAD=https://downloads.plex.tv/plex-media-server-new
      - PLEX_ARCH=arm64
      - PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR=/config/Library/Application
        Support
      - PLEX_MEDIA_SERVER_HOME=/usr/lib/plexmediaserver
      - PLEX_MEDIA_SERVER_MAX_PLUGIN_PROCS=6
      - PLEX_MEDIA_SERVER_USER=abc
      - PLEX_MEDIA_SERVER_INFO_VENDOR=Docker
      - PLEX_MEDIA_SERVER_INFO_DEVICE=Docker Container (LinuxServer.io)
    expose:
      - 1900/udp
      - 32400/tcp
      - 32410/udp
      - 32412/udp
      - 32413/udp
      - 32414/udp
      - 32469/tcp
      - 5353/udp
      - 8324/tcp
    hostname: atlaspi
    image: linuxserver/plex:latest
    ipc: private
    labels:
      build_version: Linuxserver.io version:- 1.32.8.7639-fb6452ebf-ls201 Build-date:-
        2024-01-22T09:20:52+00:00
      maintainer: thelamer
      org.opencontainers.image.authors: linuxserver.io
      org.opencontainers.image.created: 2024-01-22T09:20:52+00:00
      org.opencontainers.image.description: "[Plex](https://plex.tv) organizes video,
        music and photos from personal media libraries and streams them to smart
        TVs, streaming boxes and mobile devices. This container is packaged as a
        standalone Plex Media Server. Straightforward design and bulk actions
        mean getting things done faster."
      org.opencontainers.image.documentation: https://docs.linuxserver.io/images/docker-plex
      org.opencontainers.image.licenses: GPL-3.0-only
      org.opencontainers.image.ref.name: 0ae63a4bc562b57bed6b749b9ad0ff750be1c75f
      org.opencontainers.image.revision: 0ae63a4bc562b57bed6b749b9ad0ff750be1c75f
      org.opencontainers.image.source: https://github.com/linuxserver/docker-plex
      org.opencontainers.image.title: Plex
      org.opencontainers.image.url: https://github.com/linuxserver/docker-plex/packages
      org.opencontainers.image.vendor: linuxserver.io
      org.opencontainers.image.version: 1.32.8.7639-fb6452ebf-ls201
    logging:
      driver: json-file
      options: {}
    network_mode: host
    restart: unless-stopped
    volumes:
      - /mnt/nas/Media/Videos:/videos
      - /mnt/nas/Media/movies:/movies
      - /mnt/nas/Media/tv shows:/tv
      - plex-config:/config
    working_dir: /
  tautulli:
    cap_drop:
      - AUDIT_CONTROL
      - BLOCK_SUSPEND
      - DAC_READ_SEARCH
      - IPC_LOCK
      - IPC_OWNER
      - LEASE
      - LINUX_IMMUTABLE
      - MAC_ADMIN
      - MAC_OVERRIDE
      - NET_ADMIN
      - NET_BROADCAST
      - SYSLOG
      - SYS_ADMIN
      - SYS_BOOT
      - SYS_MODULE
      - SYS_NICE
      - SYS_PACCT
      - SYS_PTRACE
      - SYS_RAWIO
      - SYS_RESOURCE
      - SYS_TIME
      - SYS_TTY_CONFIG
      - WAKE_ALARM
    container_name: tautulli
    entrypoint:
      - /init
    environment:
      - PUID=1000
      - PGID=1000
      - PS1=$(whoami)@$(hostname):$(pwd)\$
      - PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - HOME=/root
      - TERM=xterm
      - S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0
      - S6_VERBOSITY=1
      - S6_STAGE2_HOOK=/docker-mods
      - VIRTUAL_ENV=/lsiopy
      - LSIO_FIRST_PARTY=true
      - TAUTULLI_DOCKER=True
    hostname: 1ea2def72c42
    image: linuxserver/tautulli:latest
    ipc: private
    labels:
      build_version: Linuxserver.io version:- v2.13.4-ls116 Build-date:-
        2024-01-18T23:31:41+00:00
      maintainer: nemchik,thelamer
      org.opencontainers.image.authors: linuxserver.io
      org.opencontainers.image.created: 2024-01-18T23:31:41+00:00
      org.opencontainers.image.description: "[Tautulli](http://tautulli.com) is a
        python based web application for monitoring, analytics and notifications
        for Plex Media Server."
      org.opencontainers.image.documentation: https://docs.linuxserver.io/images/docker-tautulli
      org.opencontainers.image.licenses: GPL-3.0-only
      org.opencontainers.image.ref.name: a5be112876d7791be30d584a3be0ea4425753b56
      org.opencontainers.image.revision: a5be112876d7791be30d584a3be0ea4425753b56
      org.opencontainers.image.source: https://github.com/linuxserver/docker-tautulli
      org.opencontainers.image.title: Tautulli
      org.opencontainers.image.url: https://github.com/linuxserver/docker-tautulli/packages
      org.opencontainers.image.vendor: linuxserver.io
      org.opencontainers.image.version: v2.13.4-ls116
    logging:
      driver: json-file
      options: {}
    mac_address: 02:42:ac:11:00:04
    network_mode: bridge
    ports:
      - 8181:8181/tcp
    restart: unless-stopped
    volumes:
      - tautulli-config:/config
      - tautulli-logs:/logs
    working_dir: /
  stash:
    image: stashapp/stash:latest
    container_name: stash
    ## the container's port must be the same with the STASH_PORT in the environment section
    ports:
      - "9999:9999"
    ## If you intend to use stash's DLNA functionality uncomment the below network mode and comment out the above ports section
    # network_mode: host
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "2m"
    environment:
      - STASH_STASH=/data/
      - STASH_GENERATED=/generated/
      - STASH_METADATA=/metadata/
      - STASH_CACHE=/cache/
      ## Adjust below to change default port (9999)
      - STASH_PORT=9999
    volumes:
      - /etc/localtime:/etc/localtime:ro
      ## Adjust below paths (the left part) to your liking.
      ## E.g. you can change ./config:/root/.stash to ./stash:/root/.stash
      ## The left part is the path on your host, the right part is the path in the stash container.

      ## Keep configs, scrapers, and plugins here.
      - stash-config:/root/.stash
      ## Point this at your collection.
      ## The left side is where your collection is on your host, the right side is where it will be in stash.
      - /mnt/nas/Media/Porn:/data
      ## This is where your stash's metadata lives
      - /mnt/nas/Media/Porn/Stash_conf/metadata:/metadata
      ## Any other cache content.
      - /mnt/nas/Media/Porn/Stash_conf/cache:/cache
      ## Where to store binary blob data (scene covers, images)
      - /mnt/nas/Media/Porn/Stash_conf/blobs:/blobs
      ## Where to store generated content (screenshots,previews,transcodes,sprites)
      - /mnt/nas/Media/Porn/Stash_conf/generated:/generated
    restart: unless-stopped
version: "3.6"
volumes:
  audiobookshelf-config:
    external: true
  audiobookshelf-metadata:
    external: true
  calibreweb-config:
    external: true
  jellyfin-config:
    external: true
  plex-config:
    external: true
  tautulli-config:
    external: true
  tautulli-logs:
    external: true
  stash-config:
    external: true
networks: {}
